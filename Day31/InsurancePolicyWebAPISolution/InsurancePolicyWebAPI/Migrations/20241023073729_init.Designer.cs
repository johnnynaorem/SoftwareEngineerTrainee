// <auto-generated />
using System;
using InsurancePolicyWebAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsurancePolicyWebAPI.Migrations
{
    [DbContext(typeof(PolicyContext))]
    [Migration("20241023073729_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClaimTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfIncident")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolicyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClaimTypeId");

                    b.HasIndex("ClaimantId");

                    b.HasIndex("PolicyNumber");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Claimant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Claimants");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.ClaimReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimReports");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.ClaimType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClaimTypes");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Policy", b =>
                {
                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ClaimantId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyNumber");

                    b.HasIndex("ClaimantId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Claim", b =>
                {
                    b.HasOne("InsurancePolicyWebAPI.Models.ClaimType", "ClaimType")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsurancePolicyWebAPI.Models.Claimant", "Claimant")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsurancePolicyWebAPI.Models.Policy", "Policy")
                        .WithMany("Claims")
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaimType");

                    b.Navigation("Claimant");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.ClaimReport", b =>
                {
                    b.HasOne("InsurancePolicyWebAPI.Models.Claim", "Claim")
                        .WithMany("ClaimReports")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Policy", b =>
                {
                    b.HasOne("InsurancePolicyWebAPI.Models.Claimant", null)
                        .WithMany("Policies")
                        .HasForeignKey("ClaimantId");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Claim", b =>
                {
                    b.Navigation("ClaimReports");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Claimant", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Policies");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.ClaimType", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("InsurancePolicyWebAPI.Models.Policy", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
