// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolicyClaimWebApi.Contexts;

#nullable disable

namespace PolicyClaimWebApi.Migrations
{
    [DbContext(typeof(PolicyContext))]
    [Migration("20241029071956_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PolicyClaimWebApi.Models.Claim", b =>
                {
                    b.Property<int>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimID"), 1L, 1);

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClaimantId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClaimID");

                    b.HasIndex("ClaimantId");

                    b.HasIndex("PolicyNumber");

                    b.HasIndex("TypeName");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.Claimant", b =>
                {
                    b.Property<int>("ClaimantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimantId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimantId");

                    b.ToTable("Claimants");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.ClaimFile", b =>
                {
                    b.Property<int>("ClaimFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimFileId"), 1L, 1);

                    b.Property<int>("ClaimID")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimFileId");

                    b.HasIndex("ClaimID");

                    b.ToTable("ClaimFiles");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.ClaimType", b =>
                {
                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PolicyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeName");

                    b.HasIndex("PolicyNumber");

                    b.ToTable("ClaimTypes");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.Policy", b =>
                {
                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AboutPolicy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyNumber");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("HashKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.Claim", b =>
                {
                    b.HasOne("PolicyClaimWebApi.Models.Claimant", "Claimant")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyClaimWebApi.Models.Policy", "Policy")
                        .WithMany("Claims")
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyClaimWebApi.Models.ClaimType", "ClaimType")
                        .WithMany("Claims")
                        .HasForeignKey("TypeName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClaimType");

                    b.Navigation("Claimant");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.ClaimFile", b =>
                {
                    b.HasOne("PolicyClaimWebApi.Models.Claim", "Claim")
                        .WithMany("ClaimFiles")
                        .HasForeignKey("ClaimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.ClaimType", b =>
                {
                    b.HasOne("PolicyClaimWebApi.Models.Policy", "Policy")
                        .WithMany("Types")
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.Claim", b =>
                {
                    b.Navigation("ClaimFiles");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.Claimant", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.ClaimType", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("PolicyClaimWebApi.Models.Policy", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
