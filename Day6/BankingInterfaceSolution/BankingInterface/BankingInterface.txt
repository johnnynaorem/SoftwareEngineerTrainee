using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BankingInterface
{
    internal class NormalBank : IBankInterface
    {
        public double balance;
        public const double MinBalance = 5000;
        public const double TransactionChargePercent = 0.001;


        public NormalBank(double initialBalance)
        {
            if (initialBalance < MinBalance) {
                balance = MinBalance;
                return;
            }
            balance = initialBalance;
        }

        public bool MoneyTransaction(double amount)
        {
            double transactionCharge = amount * TransactionChargePercent;
            double totalDeduction = amount + transactionCharge;

            if (balance - totalDeduction >= MinBalance)
            {
                balance -= totalDeduction;
                return true;
            }
            Console.WriteLine($"Transaction Failed!! Your Balance is less than Minimum Balance {MinBalance}");
            return false;
        }
        public bool hasMinimumBalance()
        {
            return balance >= MinBalance;
        }

        public double getBalance()
        {
            return balance;
        }
    }
}


---------------------------------------------------------------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BankingInterface
{
    internal class NRIbank : IBankInterface
    {
        double balance;
        const double MinBalance = 10000;
        const double TransactionChargePercent = 0.02;

        public NRIbank(double initialBalance)
        {
            if (initialBalance < MinBalance)
            {
                balance = MinBalance;
                return;
            }
            balance = initialBalance;
        }

        public bool MoneyTransaction(double amount)
        {
            double transactionCharge = amount * TransactionChargePercent;
            double totalDeduction = amount + transactionCharge;

            if (balance - totalDeduction >= MinBalance)
            {
                balance -= totalDeduction;
                return true;
            }
            Console.WriteLine($"Transaction Failed! Your balance is below the minimum required balance of \"{MinBalance}\".");
            return false;
        }
        public bool hasMinimumBalance()
        {
            return balance >= MinBalance;
        }

        public double getBalance()
        {
            return balance;
        }
    }

}


----------------------------------------------------------------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BankingInterface
{
    internal class SalaryBank : IBankInterface
    {
        double balance;

        public SalaryBank(double amount)
        {
            balance = amount;
        }

        public bool MoneyTransaction(double amount)
        {
            if (balance - amount >= 0)
            {
                balance -= amount;
                return true;
            }
            return false;
        }

        public bool hasMinimumBalance()
        {
            return true;
        }

        public double getBalance()
        {
            return balance;
        }
    }
}


-------------------------------------------------------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BankingInterface
{
    internal interface IBankInterface
    {
        public bool MoneyTransaction(double amount);
        public bool hasMinimumBalance();
        public double getBalance();
    }
}



-------------------------------------------------------------------------------------------------------------------------------------------------------------

using System.Security.Principal;
using System.Threading.Channels;

namespace BankingInterface
{
    internal class Program
    {
        void PrintMainMenu()
        {
            Console.WriteLine("Welcome to the Bank Management Service");
            Console.WriteLine("Enter 1 to Create Normal Account");
            Console.WriteLine("Enter 2 to Create NRI Account");
            Console.WriteLine("Enter 3 to Create Salary Account");
        }

                void MainInteraction()
        {
            var choice = 0;
            do
            {
                PrintMainMenu();
                choice = Convert.ToInt32(Console.ReadLine());
                switch (choice)
                {
                    case 1:
                        normalAcct();
                        break;
                    case 2:
                        nriAcct();
                        break;
                    case 3:
                        salaryAcct();
                        break;
                    case 0:
                        Console.WriteLine("Exiting...");
                        break;
                    default:
                        Console.WriteLine("Invalid option");
                        break;
                }
            } while (choice != 0);
        }
        
        private void normalAcct()
        {
            Console.WriteLine("Creating Normal Account");
            Console.WriteLine("Enter Amount to Deposit (minimum: 5000)");
            double balance = Convert.ToDouble(Console.ReadLine());
            IBankInterface normalAccount = new NormalBank(balance);
            Console.WriteLine("Normal Account:");
            Console.WriteLine($"Initial Balance: {normalAccount.getBalance()}");
            Console.WriteLine("Enter Amount for Transaction: ");
            double transactBalance = Convert.ToDouble(Console.ReadLine());
            bool normalTransactionSuccess = normalAccount.MoneyTransaction(transactBalance);
            Console.WriteLine($"Transaction Success: {normalTransactionSuccess}");
            if (normalTransactionSuccess)
            {
                Console.WriteLine($"New Balance after transacting {transactBalance}: {normalAccount.getBalance()}");
            }
        }
        private void nriAcct()
        {
            Console.WriteLine("Creating NRI Account");
            Console.WriteLine("Enter Amount to Deposit (minimum 10000)");
            double balance = Convert.ToDouble(Console.ReadLine());
            IBankInterface nriAccount = new NRIbank(balance);
            Console.WriteLine("NRI Account:");
            Console.WriteLine($"Initial Balance: {nriAccount.getBalance()}");
            Console.WriteLine("Enter Amount for Transaction: ");
            double transactBalance = Convert.ToDouble(Console.ReadLine());
            bool normalTransactionSuccess = nriAccount.MoneyTransaction(transactBalance);
            Console.WriteLine($"Transaction Success: {normalTransactionSuccess}");
            if (normalTransactionSuccess)
            {
                Console.WriteLine($"New Balance after transacting {transactBalance}: {nriAccount.getBalance()}");
            }
        }
        private void salaryAcct()
        {
            Console.WriteLine("Creating Salary Account");
            Console.WriteLine("Enter Amount to Deposit: ");
            double balance = Convert.ToDouble(Console.ReadLine());
            IBankInterface salaryAccount = new SalaryBank(balance);
            Console.WriteLine("Salary Account:");
            Console.WriteLine($"Initial Balance: {salaryAccount.getBalance()}");
            Console.WriteLine("Enter Amount for Transaction: ");
            double transactBalance = Convert.ToDouble(Console.ReadLine());
            bool normalTransactionSuccess = salaryAccount.MoneyTransaction(transactBalance);
            Console.WriteLine($"Transaction Success: {normalTransactionSuccess}");
            if (normalTransactionSuccess)
            {
                Console.WriteLine($"New Balance after transacting {transactBalance}: {salaryAccount.getBalance()}");
            }
        }

        public void BuyProducts() { }
        static void Main(string[] args)
        {
            var program = new Program();
            program.MainInteraction();
        }
    }
}
